generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(cuid())
  jwt_token             String?
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  farcaster_displayname String?
  farcaster_pfp         String?
  farcaster_username    String
  refresh_token         String?
  token_expires_at      DateTime?
  farcaster_fid         String    @unique
  progress              Progress?

  @@map("users")
}

model Progress {
  id            String   @id @default(cuid())
  user_id       String   @unique
  game_state    Json
  version       Int      @default(1)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  is_compressed Boolean  @default(false)
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("user_progress")
}

model SyncQueue {
  id         Int      @id @default(autoincrement())
  user_id    String
  operation  String
  data       Json
  status     String   @default("pending")
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  attempts   Int      @default(0)

  @@index([status], map: "idx_sync_queue_status")
  @@index([user_id], map: "idx_sync_queue_user_id")
  @@map("sync_queue")
}

model ProgressHistory {
  id          Int      @id @default(autoincrement())
  user_id     String
  client_id   String
  save_type   String
  save_reason String
  created_at  DateTime @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_progress_history_created_at")
  @@index([user_id], map: "idx_progress_history_user_id")
  @@map("progress_history")
}
