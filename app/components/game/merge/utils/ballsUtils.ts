'use client'

import { Ball, ExtendedBall } from '../types/index';
import planck from 'planck';

/**
 * –£–¥–∞–ª—è–µ—Ç –æ–¥–∏–Ω —à–∞—Ä –∏–∑ –∏–≥—Ä—ã
 * @param ball –®–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 * @param ballsRef –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤ —à–∞—Ä–æ–≤
 * @param worldRef –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –º–∏—Ä planck
 */
export const removeBall = (
  ball: ExtendedBall,
  ballsRef: React.MutableRefObject<ExtendedBall[]>,
  worldRef: React.MutableRefObject<planck.World | null>,
) => {
  if (!ball) {
    console.warn("–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —à–∞—Ä–∞");
    return;
  }
  
  console.log(`üî• –£–î–ê–õ–ï–ù–ò–ï –®–ê–†–ê: —É—Ä–æ–≤–µ–Ω—å ${ball.level}, —Ç–∏–ø ${ball.specialType || '–æ–±—ã—á–Ω—ã–π'}`);
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Å–∏–≤, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –∏—Å–∫–ª—é—á–∏—Ç—å —à–∞—Ä –∏–∑ –±—É–¥—É—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç–æ–∫
  ballsRef.current = ballsRef.current.filter(b => b !== ball);
  
  // 1. –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —à–∞—Ä–∞ –ù–ï–ú–ï–î–õ–ï–ù–ù–û
  if (ball.sprite) {
    try {
      // –î–ª—è —à–∞—Ä–æ–≤ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
      if (ball.sprite.effectsContainer && !ball.sprite.effectsContainer.destroyed) {
        console.log(`–£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —à–∞—Ä–∞ —É—Ä–æ–≤–Ω—è ${ball.level}`);
        ball.sprite.effectsContainer.destroy();
      }
      
      // –£–¥–∞–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      if (ball.sprite.container && !ball.sprite.container.destroyed) {
        console.log(`–£–¥–∞–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —à–∞—Ä–∞ —É—Ä–æ–≤–Ω—è ${ball.level}`);
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        if (ball.sprite.container.list && Array.isArray(ball.sprite.container.list)) {
          ball.sprite.container.list.forEach((child: any) => {
            if (child && !child.destroyed) {
              child.destroy();
            }
          });
        }
        ball.sprite.container.destroy();
      }
      
      // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–ø—Ä–∞–π—Ç—ã –≤ null
      ball.sprite.container = null;
      ball.sprite.circle = null;
      ball.sprite.text = null;
      if (ball.sprite.effectsContainer) ball.sprite.effectsContainer = null;
    } catch (e) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —à–∞—Ä–∞ —É—Ä–æ–≤–Ω—è ${ball.level}:`, e);
    }
  }
  
  // 2. –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ç–µ–ª–æ
  if (ball.body && worldRef.current) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–æ –ª–∏ –µ—â–µ —Ç–µ–ª–æ
      const isBodyActive = ball.body.isActive();
      
      // –û—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
      ball.body.setUserData(null);
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–ª–æ
      ball.body.setLinearVelocity({ x: 0, y: 0 });
      ball.body.setAngularVelocity(0);
      
      // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–∏–∑–∏–∫—É
      ball.body.setActive(false);
      ball.body.setAwake(false);
      
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã
      let fixture = ball.body.getFixtureList();
      while (fixture) {
        const nextFixture = fixture.getNext();
        ball.body.destroyFixture(fixture);
        fixture = nextFixture;
      }
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ–ª–æ –∏–∑ –º–∏—Ä–∞, –µ—Å–ª–∏ –æ–Ω–æ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–æ
      if (isBodyActive) {
        console.log(`–£–¥–∞–ª—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ç–µ–ª–æ —à–∞—Ä–∞ —É—Ä–æ–≤–Ω—è ${ball.level}`);
        try {
          worldRef.current.destroyBody(ball.body);
        } catch (e) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ–ª–∞: ${e}`);
        }
      }
      
      // –Ø–≤–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
      ball.body = null as any;
    } catch (e) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ–ª–∞ —à–∞—Ä–∞ —É—Ä–æ–≤–Ω—è ${ball.level}:`, e);
    }
  }
  
  // 3. –û—á–∏—â–∞–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤ –æ–±—ä–µ–∫—Ç–µ —à–∞—Ä–∞
  Object.keys(ball).forEach(key => {
    (ball as any)[key] = null;
  });
  
  // 4. –ï—â—ë —Ä–∞–∑ —É–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —à–∞—Ä —É–¥–∞–ª—ë–Ω –∏–∑ –º–∞—Å—Å–∏–≤–∞
  const stillExists = ballsRef.current.some(b => b === ball);
  if (stillExists) {
    console.error(`‚ö†Ô∏è –®–ê–† –í–°–Å –ï–©–Å –°–£–©–ï–°–¢–í–£–ï–¢ –í –ú–ê–°–°–ò–í–ï! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º...`);
    ballsRef.current = ballsRef.current.filter(b => b !== ball);
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –≤—Å–µ "–º—ë—Ä—Ç–≤—ã–µ" —à–∞—Ä—ã –±–µ–∑ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Ç–µ–ª
  const invalidBalls = ballsRef.current.filter(b => !b || !b.body);
  if (invalidBalls.length > 0) {
    console.warn(`–ù–∞–π–¥–µ–Ω–æ ${invalidBalls.length} —à–∞—Ä–æ–≤ –±–µ–∑ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Ç–µ–ª, –æ—á–∏—â–∞–µ–º...`);
    ballsRef.current = ballsRef.current.filter(b => b && b.body);
  }
  
  // –ü—Ä–æ–±—É–µ–º —è–≤–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
  if (typeof global !== 'undefined' && global.gc) {
    try {
      global.gc();
    } catch (e) {
      console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞:", e);
    }
  }
};

/**
 * –ù–∞—Ö–æ–¥–∏—Ç —à–∞—Ä—ã —Å —Å–∞–º—ã–º–∏ –Ω–∏–∂–Ω–∏–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏
 * @param ballsRef –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤ —à–∞—Ä–æ–≤
 * @param count –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞—Ä–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
 * @returns –ú–∞—Å—Å–∏–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —à–∞—Ä–æ–≤
 */
export const findBottomBalls = (
  ballsRef: React.MutableRefObject<ExtendedBall[]>,
  count: number
): ExtendedBall[] => {
  if (!ballsRef.current.length) return [];
  
  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞ —à–∞—Ä–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ Y-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ (—Å–∞–º—ã–µ –Ω–∏–∂–Ω–∏–µ –≤–Ω–∞—á–∞–ª–µ)
  return [...ballsRef.current]
    .filter(ball => ball && ball.body)
    .sort((a, b) => {
      if (!a.body || !b.body) return 0;
      return b.body.getPosition().y - a.body.getPosition().y;
    })
    .slice(0, count);
};

/**
 * –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ —à–∞—Ä—ã –∏–∑ –∏–≥—Ä—ã
 * @param balls –ú–∞—Å—Å–∏–≤ —à–∞—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 * @param ballsRef –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —à–∞—Ä–æ–≤
 * @param worldRef –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –º–∏—Ä planck
 * @param potentiallyStuckBallsRef –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∑–∞–≤–∏—Å—à–∏—Ö —à–∞—Ä–æ–≤
 */
export const removeMultipleBalls = (
  balls: Ball[],
  ballsRef: React.MutableRefObject<ExtendedBall[]>,
  worldRef: React.MutableRefObject<planck.World | null>,
  potentiallyStuckBallsRef: React.MutableRefObject<Map<ExtendedBall, number>>
) => {
  if (!balls.length) return;
  
  for (const ball of balls) {
    if (!ball) continue;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é removeBall –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    removeBall(ball as ExtendedBall, ballsRef, worldRef);
    
    // –£–¥–∞–ª—è–µ–º —à–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∑–∞–≤–∏—Å—à–∏—Ö
    potentiallyStuckBallsRef.current.delete(ball as ExtendedBall);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤ —à–∞—Ä–æ–≤ - —É–¥–∞–ª—è–µ–º –≤—Å–µ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —à–∞—Ä—ã
  ballsRef.current = ballsRef.current.filter(ball => 
    ball && balls.indexOf(ball as Ball) === -1
  );
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —è–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É –º—É—Å–æ—Ä–∞
  if (typeof global !== 'undefined' && global.gc) {
    try {
      global.gc();
    } catch (e) {
      console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞:", e);
    }
  }
}; 